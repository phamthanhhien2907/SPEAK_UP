import __vite__cjsImport0_react_jsxDevRuntime from "/node_modules/.vite/deps/react_jsx-dev-runtime.js?v=66a6335f"; const _jsxDEV = __vite__cjsImport0_react_jsxDevRuntime["jsxDEV"];
import { Edit, Trash } from "/node_modules/.vite/deps/lucide-react.js?v=e8ebe34d";
import { Button } from "/src/components/ui/button.tsx";
import { Checkbox } from "/src/components/ui/checkbox.tsx";
export const getColumns = (onOpen)=>[
        {
            id: "select",
            header: ({ table })=>/*#__PURE__*/ _jsxDEV(Checkbox, {
                    checked: table.getIsAllPageRowsSelected() ? true : table.getIsSomePageRowsSelected() ? "indeterminate" : false,
                    onCheckedChange: (value)=>table.toggleAllPageRowsSelected(!!value),
                    "aria-label": "Select all"
                }, void 0, false, {
                    fileName: "D:/DATN/client/src/components/tables/feedbacks/columns.tsx",
                    lineNumber: 15,
                    columnNumber: 7
                }, this),
            cell: ({ row })=>/*#__PURE__*/ _jsxDEV(Checkbox, {
                    checked: row.getIsSelected(),
                    onCheckedChange: (value)=>row.toggleSelected(!!value),
                    "aria-label": "Select row"
                }, void 0, false, {
                    fileName: "D:/DATN/client/src/components/tables/feedbacks/columns.tsx",
                    lineNumber: 28,
                    columnNumber: 7
                }, this),
            enableSorting: false,
            enableHiding: false
        },
        {
            accessorKey: "userId.email",
            id: "userId.email",
            header: "User Email Title",
            cell: ({ row })=>{
                const user = row.original.userId;
                return /*#__PURE__*/ _jsxDEV("div", {
                    className: "capitalize",
                    children: user?.email || "N/A"
                }, void 0, false, {
                    fileName: "D:/DATN/client/src/components/tables/feedbacks/columns.tsx",
                    lineNumber: 43,
                    columnNumber: 14
                }, this);
            }
        },
        {
            accessorKey: "lessonId.title",
            id: "lessonId.title",
            header: "Lesson Title",
            cell: ({ row })=>{
                const lesson = row.original.lessonId;
                return /*#__PURE__*/ _jsxDEV("div", {
                    className: "capitalize",
                    children: lesson?.title || "N/A"
                }, void 0, false, {
                    fileName: "D:/DATN/client/src/components/tables/feedbacks/columns.tsx",
                    lineNumber: 52,
                    columnNumber: 14
                }, this);
            }
        },
        {
            accessorKey: "comment",
            header: "Comment",
            cell: ({ row })=>/*#__PURE__*/ _jsxDEV("div", {
                    className: "capitalize",
                    children: row.getValue("comment")
                }, void 0, false, {
                    fileName: "D:/DATN/client/src/components/tables/feedbacks/columns.tsx",
                    lineNumber: 59,
                    columnNumber: 7
                }, this)
        },
        {
            accessorKey: "rating",
            header: "Rating",
            cell: ({ row })=>/*#__PURE__*/ _jsxDEV("div", {
                    className: "capitalize",
                    children: row.getValue("rating")
                }, void 0, false, {
                    fileName: "D:/DATN/client/src/components/tables/feedbacks/columns.tsx",
                    lineNumber: 66,
                    columnNumber: 7
                }, this)
        },
        {
            id: "actions",
            header: "Actions",
            enableHiding: false,
            cell: ({ row })=>{
                const feedback = row.original;
                return /*#__PURE__*/ _jsxDEV("div", {
                    className: "flex items-center gap-2",
                    children: [
                        /*#__PURE__*/ _jsxDEV(Button, {
                            onClick: ()=>onOpen("editFeedBack", {
                                    feedback
                                }),
                            className: "bg-blue-600 hover:bg-blue-700 text-white rounded-[4px]",
                            children: /*#__PURE__*/ _jsxDEV(Edit, {}, void 0, false, {
                                fileName: "D:/DATN/client/src/components/tables/feedbacks/columns.tsx",
                                lineNumber: 83,
                                columnNumber: 13
                            }, this)
                        }, void 0, false, {
                            fileName: "D:/DATN/client/src/components/tables/feedbacks/columns.tsx",
                            lineNumber: 79,
                            columnNumber: 11
                        }, this),
                        /*#__PURE__*/ _jsxDEV(Button, {
                            onClick: ()=>onOpen("deleteFeedBack", {
                                    feedback
                                }),
                            className: "bg-red-500 hover:bg-red-700 text-white rounded-[4px]",
                            children: /*#__PURE__*/ _jsxDEV(Trash, {}, void 0, false, {
                                fileName: "D:/DATN/client/src/components/tables/feedbacks/columns.tsx",
                                lineNumber: 89,
                                columnNumber: 13
                            }, this)
                        }, void 0, false, {
                            fileName: "D:/DATN/client/src/components/tables/feedbacks/columns.tsx",
                            lineNumber: 85,
                            columnNumber: 11
                        }, this)
                    ]
                }, void 0, true, {
                    fileName: "D:/DATN/client/src/components/tables/feedbacks/columns.tsx",
                    lineNumber: 78,
                    columnNumber: 9
                }, this);
            }
        }
    ];

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbHVtbnMudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbHVtbkRlZiB9IGZyb20gXCJAdGFuc3RhY2svcmVhY3QtdGFibGVcIjtcclxuaW1wb3J0IHsgRWRpdCwgVHJhc2ggfSBmcm9tIFwibHVjaWRlLXJlYWN0XCI7XHJcbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gXCJAL2NvbXBvbmVudHMvdWkvYnV0dG9uXCI7XHJcbmltcG9ydCB7IENoZWNrYm94IH0gZnJvbSBcIkAvY29tcG9uZW50cy91aS9jaGVja2JveFwiO1xyXG5pbXBvcnQgeyBNb2RhbERhdGEsIE1vZGFsVHlwZSB9IGZyb20gXCJAL2hvb2tzL3VzZS1tb2RlbC1zdG9yZVwiO1xyXG5pbXBvcnQgeyBGZWVkYmFjayB9IGZyb20gXCJAL3R5cGVzL2ZlZWRiYWNrXCI7XHJcbmltcG9ydCB7IExlc3NvbiB9IGZyb20gXCJAL3R5cGVzL2xlc3NvblwiO1xyXG5pbXBvcnQgeyBVc2VyIH0gZnJvbSBcIkAvdHlwZXMvdXNlclwiO1xyXG5leHBvcnQgY29uc3QgZ2V0Q29sdW1ucyA9IChcclxuICBvbk9wZW46ICh0eXBlOiBNb2RhbFR5cGUsIGRhdGE/OiBNb2RhbERhdGEpID0+IHZvaWRcclxuKTogQ29sdW1uRGVmPEZlZWRiYWNrPltdID0+IFtcclxuICB7XHJcbiAgICBpZDogXCJzZWxlY3RcIixcclxuICAgIGhlYWRlcjogKHsgdGFibGUgfSkgPT4gKFxyXG4gICAgICA8Q2hlY2tib3hcclxuICAgICAgICBjaGVja2VkPXtcclxuICAgICAgICAgIHRhYmxlLmdldElzQWxsUGFnZVJvd3NTZWxlY3RlZCgpXHJcbiAgICAgICAgICAgID8gdHJ1ZVxyXG4gICAgICAgICAgICA6IHRhYmxlLmdldElzU29tZVBhZ2VSb3dzU2VsZWN0ZWQoKVxyXG4gICAgICAgICAgICA/IFwiaW5kZXRlcm1pbmF0ZVwiXHJcbiAgICAgICAgICAgIDogZmFsc2VcclxuICAgICAgICB9XHJcbiAgICAgICAgb25DaGVja2VkQ2hhbmdlPXsodmFsdWUpID0+IHRhYmxlLnRvZ2dsZUFsbFBhZ2VSb3dzU2VsZWN0ZWQoISF2YWx1ZSl9XHJcbiAgICAgICAgYXJpYS1sYWJlbD1cIlNlbGVjdCBhbGxcIlxyXG4gICAgICAvPlxyXG4gICAgKSxcclxuICAgIGNlbGw6ICh7IHJvdyB9KSA9PiAoXHJcbiAgICAgIDxDaGVja2JveFxyXG4gICAgICAgIGNoZWNrZWQ9e3Jvdy5nZXRJc1NlbGVjdGVkKCl9XHJcbiAgICAgICAgb25DaGVja2VkQ2hhbmdlPXsodmFsdWUpID0+IHJvdy50b2dnbGVTZWxlY3RlZCghIXZhbHVlKX1cclxuICAgICAgICBhcmlhLWxhYmVsPVwiU2VsZWN0IHJvd1wiXHJcbiAgICAgIC8+XHJcbiAgICApLFxyXG4gICAgZW5hYmxlU29ydGluZzogZmFsc2UsXHJcbiAgICBlbmFibGVIaWRpbmc6IGZhbHNlLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgYWNjZXNzb3JLZXk6IFwidXNlcklkLmVtYWlsXCIsXHJcbiAgICBpZDogXCJ1c2VySWQuZW1haWxcIixcclxuICAgIGhlYWRlcjogXCJVc2VyIEVtYWlsIFRpdGxlXCIsXHJcbiAgICBjZWxsOiAoeyByb3cgfSkgPT4ge1xyXG4gICAgICBjb25zdCB1c2VyID0gcm93Lm9yaWdpbmFsLnVzZXJJZCBhcyBVc2VyO1xyXG4gICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJjYXBpdGFsaXplXCI+e3VzZXI/LmVtYWlsIHx8IFwiTi9BXCJ9PC9kaXY+O1xyXG4gICAgfSxcclxuICB9LFxyXG4gIHtcclxuICAgIGFjY2Vzc29yS2V5OiBcImxlc3NvbklkLnRpdGxlXCIsXHJcbiAgICBpZDogXCJsZXNzb25JZC50aXRsZVwiLFxyXG4gICAgaGVhZGVyOiBcIkxlc3NvbiBUaXRsZVwiLFxyXG4gICAgY2VsbDogKHsgcm93IH0pID0+IHtcclxuICAgICAgY29uc3QgbGVzc29uID0gcm93Lm9yaWdpbmFsLmxlc3NvbklkIGFzIExlc3NvbjtcclxuICAgICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPVwiY2FwaXRhbGl6ZVwiPntsZXNzb24/LnRpdGxlIHx8IFwiTi9BXCJ9PC9kaXY+O1xyXG4gICAgfSxcclxuICB9LFxyXG4gIHtcclxuICAgIGFjY2Vzc29yS2V5OiBcImNvbW1lbnRcIixcclxuICAgIGhlYWRlcjogXCJDb21tZW50XCIsXHJcbiAgICBjZWxsOiAoeyByb3cgfSkgPT4gKFxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImNhcGl0YWxpemVcIj57cm93LmdldFZhbHVlKFwiY29tbWVudFwiKX08L2Rpdj5cclxuICAgICksXHJcbiAgfSxcclxuICB7XHJcbiAgICBhY2Nlc3NvcktleTogXCJyYXRpbmdcIixcclxuICAgIGhlYWRlcjogXCJSYXRpbmdcIixcclxuICAgIGNlbGw6ICh7IHJvdyB9KSA9PiAoXHJcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2FwaXRhbGl6ZVwiPntyb3cuZ2V0VmFsdWUoXCJyYXRpbmdcIil9PC9kaXY+XHJcbiAgICApLFxyXG4gIH0sXHJcblxyXG4gIHtcclxuICAgIGlkOiBcImFjdGlvbnNcIixcclxuICAgIGhlYWRlcjogXCJBY3Rpb25zXCIsXHJcbiAgICBlbmFibGVIaWRpbmc6IGZhbHNlLFxyXG4gICAgY2VsbDogKHsgcm93IH0pID0+IHtcclxuICAgICAgY29uc3QgZmVlZGJhY2sgPSByb3cub3JpZ2luYWw7XHJcblxyXG4gICAgICByZXR1cm4gKFxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTJcIj5cclxuICAgICAgICAgIDxCdXR0b25cclxuICAgICAgICAgICAgb25DbGljaz17KCkgPT4gb25PcGVuKFwiZWRpdEZlZWRCYWNrXCIsIHsgZmVlZGJhY2sgfSl9XHJcbiAgICAgICAgICAgIGNsYXNzTmFtZT1cImJnLWJsdWUtNjAwIGhvdmVyOmJnLWJsdWUtNzAwIHRleHQtd2hpdGUgcm91bmRlZC1bNHB4XVwiXHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDxFZGl0IC8+XHJcbiAgICAgICAgICA8L0J1dHRvbj5cclxuICAgICAgICAgIDxCdXR0b25cclxuICAgICAgICAgICAgb25DbGljaz17KCkgPT4gb25PcGVuKFwiZGVsZXRlRmVlZEJhY2tcIiwgeyBmZWVkYmFjayB9KX1cclxuICAgICAgICAgICAgY2xhc3NOYW1lPVwiYmctcmVkLTUwMCBob3ZlcjpiZy1yZWQtNzAwIHRleHQtd2hpdGUgcm91bmRlZC1bNHB4XVwiXHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDxUcmFzaCAvPlxyXG4gICAgICAgICAgPC9CdXR0b24+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICk7XHJcbiAgICB9LFxyXG4gIH0sXHJcbl07XHJcbiJdLCJuYW1lcyI6WyJFZGl0IiwiVHJhc2giLCJCdXR0b24iLCJDaGVja2JveCIsImdldENvbHVtbnMiLCJvbk9wZW4iLCJpZCIsImhlYWRlciIsInRhYmxlIiwiY2hlY2tlZCIsImdldElzQWxsUGFnZVJvd3NTZWxlY3RlZCIsImdldElzU29tZVBhZ2VSb3dzU2VsZWN0ZWQiLCJvbkNoZWNrZWRDaGFuZ2UiLCJ2YWx1ZSIsInRvZ2dsZUFsbFBhZ2VSb3dzU2VsZWN0ZWQiLCJhcmlhLWxhYmVsIiwiY2VsbCIsInJvdyIsImdldElzU2VsZWN0ZWQiLCJ0b2dnbGVTZWxlY3RlZCIsImVuYWJsZVNvcnRpbmciLCJlbmFibGVIaWRpbmciLCJhY2Nlc3NvcktleSIsInVzZXIiLCJvcmlnaW5hbCIsInVzZXJJZCIsImRpdiIsImNsYXNzTmFtZSIsImVtYWlsIiwibGVzc29uIiwibGVzc29uSWQiLCJ0aXRsZSIsImdldFZhbHVlIiwiZmVlZGJhY2siLCJvbkNsaWNrIl0sIm1hcHBpbmdzIjoiO0FBQ0EsU0FBU0EsSUFBSSxFQUFFQyxLQUFLLFFBQVEsZUFBZTtBQUMzQyxTQUFTQyxNQUFNLFFBQVEseUJBQXlCO0FBQ2hELFNBQVNDLFFBQVEsUUFBUSwyQkFBMkI7QUFLcEQsT0FBTyxNQUFNQyxhQUFhLENBQ3hCQyxTQUMwQjtRQUMxQjtZQUNFQyxJQUFJO1lBQ0pDLFFBQVEsQ0FBQyxFQUFFQyxLQUFLLEVBQUUsaUJBQ2hCLFFBQUNMO29CQUNDTSxTQUNFRCxNQUFNRSx3QkFBd0IsS0FDMUIsT0FDQUYsTUFBTUcseUJBQXlCLEtBQy9CLGtCQUNBO29CQUVOQyxpQkFBaUIsQ0FBQ0MsUUFBVUwsTUFBTU0seUJBQXlCLENBQUMsQ0FBQyxDQUFDRDtvQkFDOURFLGNBQVc7Ozs7OztZQUdmQyxNQUFNLENBQUMsRUFBRUMsR0FBRyxFQUFFLGlCQUNaLFFBQUNkO29CQUNDTSxTQUFTUSxJQUFJQyxhQUFhO29CQUMxQk4saUJBQWlCLENBQUNDLFFBQVVJLElBQUlFLGNBQWMsQ0FBQyxDQUFDLENBQUNOO29CQUNqREUsY0FBVzs7Ozs7O1lBR2ZLLGVBQWU7WUFDZkMsY0FBYztRQUNoQjtRQUNBO1lBQ0VDLGFBQWE7WUFDYmhCLElBQUk7WUFDSkMsUUFBUTtZQUNSUyxNQUFNLENBQUMsRUFBRUMsR0FBRyxFQUFFO2dCQUNaLE1BQU1NLE9BQU9OLElBQUlPLFFBQVEsQ0FBQ0MsTUFBTTtnQkFDaEMscUJBQU8sUUFBQ0M7b0JBQUlDLFdBQVU7OEJBQWNKLE1BQU1LLFNBQVM7Ozs7OztZQUNyRDtRQUNGO1FBQ0E7WUFDRU4sYUFBYTtZQUNiaEIsSUFBSTtZQUNKQyxRQUFRO1lBQ1JTLE1BQU0sQ0FBQyxFQUFFQyxHQUFHLEVBQUU7Z0JBQ1osTUFBTVksU0FBU1osSUFBSU8sUUFBUSxDQUFDTSxRQUFRO2dCQUNwQyxxQkFBTyxRQUFDSjtvQkFBSUMsV0FBVTs4QkFBY0UsUUFBUUUsU0FBUzs7Ozs7O1lBQ3ZEO1FBQ0Y7UUFDQTtZQUNFVCxhQUFhO1lBQ2JmLFFBQVE7WUFDUlMsTUFBTSxDQUFDLEVBQUVDLEdBQUcsRUFBRSxpQkFDWixRQUFDUztvQkFBSUMsV0FBVTs4QkFBY1YsSUFBSWUsUUFBUSxDQUFDOzs7Ozs7UUFFOUM7UUFDQTtZQUNFVixhQUFhO1lBQ2JmLFFBQVE7WUFDUlMsTUFBTSxDQUFDLEVBQUVDLEdBQUcsRUFBRSxpQkFDWixRQUFDUztvQkFBSUMsV0FBVTs4QkFBY1YsSUFBSWUsUUFBUSxDQUFDOzs7Ozs7UUFFOUM7UUFFQTtZQUNFMUIsSUFBSTtZQUNKQyxRQUFRO1lBQ1JjLGNBQWM7WUFDZEwsTUFBTSxDQUFDLEVBQUVDLEdBQUcsRUFBRTtnQkFDWixNQUFNZ0IsV0FBV2hCLElBQUlPLFFBQVE7Z0JBRTdCLHFCQUNFLFFBQUNFO29CQUFJQyxXQUFVOztzQ0FDYixRQUFDekI7NEJBQ0NnQyxTQUFTLElBQU03QixPQUFPLGdCQUFnQjtvQ0FBRTRCO2dDQUFTOzRCQUNqRE4sV0FBVTtzQ0FFVixjQUFBLFFBQUMzQjs7Ozs7Ozs7OztzQ0FFSCxRQUFDRTs0QkFDQ2dDLFNBQVMsSUFBTTdCLE9BQU8sa0JBQWtCO29DQUFFNEI7Z0NBQVM7NEJBQ25ETixXQUFVO3NDQUVWLGNBQUEsUUFBQzFCOzs7Ozs7Ozs7Ozs7Ozs7O1lBSVQ7UUFDRjtLQUNELENBQUMifQ==