import { createStore, applyMiddleware, compose } from "/node_modules/.vite/deps/redux.js?v=0c9c095f";
import { thunk } from "/node_modules/.vite/deps/redux-thunk.js?v=cb20c95b";
import __vite__cjsImport2_reduxDevtoolsExtension from "/node_modules/.vite/deps/redux-devtools-extension.js?v=c1cb8541"; const composeWithDevTools = __vite__cjsImport2_reduxDevtoolsExtension["composeWithDevTools"];
import rootReducer from "/src/stores/reducers/rootReducer.ts";
import { persistStore } from "/node_modules/.vite/deps/redux-persist.js?v=95e017db";
const middleware = [
  thunk
];
const composedEnhancer = true ? composeWithDevTools(applyMiddleware(...middleware)) : compose(applyMiddleware(...middleware));
const reduxStore = () => {
  const store = createStore(rootReducer, composedEnhancer);
  const persistor = persistStore(store);
  return {
    store,
    persistor
  };
};
export default reduxStore;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6IkFBQUEsU0FBU0EsYUFBYUMsaUJBQWlCQyxlQUFlO0FBRXRELFNBQVNDLGFBQWE7QUFDdEIsU0FBU0MsMkJBQTJCO0FBQ3BDLE9BQU9DLGlCQUFpQjtBQUN4QixTQUFTQyxvQkFBb0I7QUFJN0IsTUFBTUMsYUFBYTtBQUFBLEVBQUNKOztBQUNwQixNQUFNSyxtQkFDRkMsT0FDTUwsb0JBQW9CSCxtQkFBbUJNLGVBQ3ZDTCxRQUFRRCxtQkFBbUJNO0FBQ3JDLE1BQU1HLGFBQWE7QUFDZixRQUFNQyxRQUFRWCxZQUFZSyxhQUFhRztBQUN2QyxRQUFNSSxZQUFZTixhQUFhSztBQUUvQixTQUFPO0FBQUEsSUFBRUE7QUFBQUEsSUFBT0M7QUFBQUEsRUFBVTtBQUM5QjtBQUVBLGVBQWVGIiwibmFtZXMiOlsiY3JlYXRlU3RvcmUiLCJhcHBseU1pZGRsZXdhcmUiLCJjb21wb3NlIiwidGh1bmsiLCJjb21wb3NlV2l0aERldlRvb2xzIiwicm9vdFJlZHVjZXIiLCJwZXJzaXN0U3RvcmUiLCJtaWRkbGV3YXJlIiwiY29tcG9zZWRFbmhhbmNlciIsInByb2Nlc3MiLCJyZWR1eFN0b3JlIiwic3RvcmUiLCJwZXJzaXN0b3IiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZXMiOlsic3RvcmUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlU3RvcmUsIGFwcGx5TWlkZGxld2FyZSwgY29tcG9zZSB9IGZyb20gXCJyZWR1eFwiO1xyXG5pbXBvcnQgeyBUaHVua0Rpc3BhdGNoIH0gZnJvbSBcInJlZHV4LXRodW5rXCI7XHJcbmltcG9ydCB7IHRodW5rIH0gZnJvbSBcInJlZHV4LXRodW5rXCI7XHJcbmltcG9ydCB7IGNvbXBvc2VXaXRoRGV2VG9vbHMgfSBmcm9tIFwicmVkdXgtZGV2dG9vbHMtZXh0ZW5zaW9uXCI7XHJcbmltcG9ydCByb290UmVkdWNlciBmcm9tIFwiLi9zdG9yZXMvcmVkdWNlcnMvcm9vdFJlZHVjZXJcIjtcclxuaW1wb3J0IHsgcGVyc2lzdFN0b3JlIH0gZnJvbSBcInJlZHV4LXBlcnNpc3RcIjtcclxuaW1wb3J0IHsgQW55QWN0aW9uIH0gZnJvbSBcInJlZHV4XCI7XHJcbmV4cG9ydCB0eXBlIFJvb3RTdGF0ZSA9IFJldHVyblR5cGU8dHlwZW9mIHJvb3RSZWR1Y2VyPjtcclxuZXhwb3J0IHR5cGUgQXBwRGlzcGF0Y2ggPSBUaHVua0Rpc3BhdGNoPFJvb3RTdGF0ZSwgdW5kZWZpbmVkLCBBbnlBY3Rpb24+O1xyXG5jb25zdCBtaWRkbGV3YXJlID0gW3RodW5rXTtcclxuY29uc3QgY29tcG9zZWRFbmhhbmNlciA9XHJcbiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJkZXZlbG9wbWVudFwiXHJcbiAgICAgICAgPyBjb21wb3NlV2l0aERldlRvb2xzKGFwcGx5TWlkZGxld2FyZSguLi5taWRkbGV3YXJlKSlcclxuICAgICAgICA6IGNvbXBvc2UoYXBwbHlNaWRkbGV3YXJlKC4uLm1pZGRsZXdhcmUpKTtcclxuY29uc3QgcmVkdXhTdG9yZSA9ICgpID0+IHtcclxuICAgIGNvbnN0IHN0b3JlID0gY3JlYXRlU3RvcmUocm9vdFJlZHVjZXIsIGNvbXBvc2VkRW5oYW5jZXIpO1xyXG4gICAgY29uc3QgcGVyc2lzdG9yID0gcGVyc2lzdFN0b3JlKHN0b3JlKTtcclxuXHJcbiAgICByZXR1cm4geyBzdG9yZSwgcGVyc2lzdG9yIH07XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCByZWR1eFN0b3JlO1xyXG4iXSwiZmlsZSI6IkQ6L0RBVE4vY2xpZW50L3NyYy9zdG9yZS50cyJ9