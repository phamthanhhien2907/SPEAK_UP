import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/components/modals/excercise-vocabulary-modal/create-exercise-vocabulary-modal.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/DATN/client/src/components/modals/excercise-vocabulary-modal/create-exercise-vocabulary-modal.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

import __vite__cjsImport1_react_jsxDevRuntime from "/node_modules/.vite/deps/react_jsx-dev-runtime.js?v=66a6335f"; const _jsxDEV = __vite__cjsImport1_react_jsxDevRuntime["jsxDEV"];
var _s = $RefreshSig$();
"use client";
import * as z from "/node_modules/.vite/deps/zod.js?v=54733448";
import { zodResolver } from "/node_modules/.vite/deps/@hookform_resolvers_zod.js?v=c50193e4";
import { useForm } from "/node_modules/.vite/deps/react-hook-form.js?v=bc8c4e1e";
import { Dialog, DialogContent, DialogFooter, DialogHeader, DialogTitle } from "/src/components/ui/dialog.tsx";
import { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from "/src/components/ui/form.tsx";
import { Button } from "/src/components/ui/button.tsx";
import { useModal } from "/src/hooks/use-model-store.ts";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "/src/components/ui/select.tsx";
import __vite__cjsImport10_react from "/node_modules/.vite/deps/react.js?v=f560a6f9"; const useEffect = __vite__cjsImport10_react["useEffect"]; const useState = __vite__cjsImport10_react["useState"];
import { apiGetAllExercise } from "/src/services/exercise.services.ts";
import { apiGetAllVocabulary } from "/src/services/vocabulary.services.ts";
import { apiCreateExerciseVocabulary } from "/src/services/excercise-vocabulary.services.ts";
const formSchema = z.object({
    exerciseId: z.string().min(1, {
        message: "Exercise Id is required"
    }),
    vocabularyId: z.string().min(6, {
        message: "Vocabulary Id required"
    })
});
export const CreateExerciseVocabularyModal = ()=>{
    _s();
    const [exerciseData, setExerciseData] = useState([]);
    const [vocabularyData, setVocabularyData] = useState([]);
    const { isOpen, onClose, type } = useModal();
    const isModalOpen = isOpen && type === "createExerciseVocabulary";
    const form = useForm({
        resolver: zodResolver(formSchema),
        defaultValues: {
            exerciseId: "",
            vocabularyId: ""
        }
    });
    const isLoading = form.formState.isSubmitting;
    const onSubmit = async (values)=>{
        console.log(values);
        const res = await apiCreateExerciseVocabulary({
            ...values,
            exerciseId: {
                _id: values.exerciseId
            },
            vocabularyId: {
                _id: values.vocabularyId
            }
        });
        if (res) {
            onClose();
        }
        form.reset();
    };
    const handleClose = ()=>{
        form.reset();
        onClose();
    };
    const getAllExercise = async ()=>{
        const exercise = await apiGetAllExercise();
        if (exercise.data.success) {
            setExerciseData(exercise.data.rs);
        } else {
            console.log("Failed to fetch users");
        }
    };
    const getAllVocabulary = async ()=>{
        const vocabulary = await apiGetAllVocabulary();
        if (vocabulary.data.success) {
            setVocabularyData(vocabulary.data.rs);
        } else {
            console.log("Failed to fetch users");
        }
    };
    useEffect(()=>{
        const fetchData = async ()=>{
            await Promise.all([
                getAllExercise(),
                getAllVocabulary()
            ]);
        };
        fetchData();
    }, []);
    return /*#__PURE__*/ _jsxDEV(Dialog, {
        open: isModalOpen,
        onOpenChange: handleClose,
        children: /*#__PURE__*/ _jsxDEV(DialogContent, {
            className: "bg-white text-black p-0 overflow-hidden",
            children: [
                /*#__PURE__*/ _jsxDEV(DialogHeader, {
                    className: "pt-8 px-6",
                    children: /*#__PURE__*/ _jsxDEV(DialogTitle, {
                        className: "text-2xl text-center font-bold",
                        children: "Create Exercise Vocabulary"
                    }, void 0, false, {
                        fileName: "D:/DATN/client/src/components/modals/excercise-vocabulary-modal/create-exercise-vocabulary-modal.tsx",
                        lineNumber: 96,
                        columnNumber: 11
                    }, this)
                }, void 0, false, {
                    fileName: "D:/DATN/client/src/components/modals/excercise-vocabulary-modal/create-exercise-vocabulary-modal.tsx",
                    lineNumber: 95,
                    columnNumber: 9
                }, this),
                /*#__PURE__*/ _jsxDEV(Form, {
                    ...form,
                    children: /*#__PURE__*/ _jsxDEV("form", {
                        className: "space-y-8",
                        onSubmit: form.handleSubmit(onSubmit),
                        children: [
                            /*#__PURE__*/ _jsxDEV("div", {
                                className: "space-y-8 px-6",
                                children: [
                                    /*#__PURE__*/ _jsxDEV(FormField, {
                                        control: form.control,
                                        name: "exerciseId",
                                        render: ({ field })=>/*#__PURE__*/ _jsxDEV(FormItem, {
                                                children: [
                                                    /*#__PURE__*/ _jsxDEV(FormLabel, {
                                                        className: "uppercase text-xs font-bold text-zinc-500 dark:text-secondary/70",
                                                        children: "Course Id"
                                                    }, void 0, false, {
                                                        fileName: "D:/DATN/client/src/components/modals/excercise-vocabulary-modal/create-exercise-vocabulary-modal.tsx",
                                                        lineNumber: 108,
                                                        columnNumber: 21
                                                    }, void 0),
                                                    /*#__PURE__*/ _jsxDEV(Select, {
                                                        disabled: isLoading,
                                                        onValueChange: field.onChange,
                                                        defaultValue: field.value,
                                                        children: [
                                                            /*#__PURE__*/ _jsxDEV(FormControl, {
                                                                children: /*#__PURE__*/ _jsxDEV(SelectTrigger, {
                                                                    className: "bg-zinc-300/50 border-0 focus:ring-0 text-black ring-offset-0 focus:ring-offset-0 capitalize outline-none",
                                                                    children: /*#__PURE__*/ _jsxDEV(SelectValue, {
                                                                        placeholder: "Select a channel type"
                                                                    }, void 0, false, {
                                                                        fileName: "D:/DATN/client/src/components/modals/excercise-vocabulary-modal/create-exercise-vocabulary-modal.tsx",
                                                                        lineNumber: 118,
                                                                        columnNumber: 27
                                                                    }, void 0)
                                                                }, void 0, false, {
                                                                    fileName: "D:/DATN/client/src/components/modals/excercise-vocabulary-modal/create-exercise-vocabulary-modal.tsx",
                                                                    lineNumber: 117,
                                                                    columnNumber: 25
                                                                }, void 0)
                                                            }, void 0, false, {
                                                                fileName: "D:/DATN/client/src/components/modals/excercise-vocabulary-modal/create-exercise-vocabulary-modal.tsx",
                                                                lineNumber: 116,
                                                                columnNumber: 23
                                                            }, void 0),
                                                            /*#__PURE__*/ _jsxDEV(SelectContent, {
                                                                className: "bg-white shadow-lg border border-gray-300",
                                                                children: Object?.values(exerciseData)?.map((type)=>/*#__PURE__*/ _jsxDEV(SelectItem, {
                                                                        value: type?._id,
                                                                        className: "capitalize",
                                                                        children: type?.prompt?.toLocaleLowerCase()
                                                                    }, type?._id, false, {
                                                                        fileName: "D:/DATN/client/src/components/modals/excercise-vocabulary-modal/create-exercise-vocabulary-modal.tsx",
                                                                        lineNumber: 123,
                                                                        columnNumber: 27
                                                                    }, void 0))
                                                            }, void 0, false, {
                                                                fileName: "D:/DATN/client/src/components/modals/excercise-vocabulary-modal/create-exercise-vocabulary-modal.tsx",
                                                                lineNumber: 121,
                                                                columnNumber: 23
                                                            }, void 0)
                                                        ]
                                                    }, void 0, true, {
                                                        fileName: "D:/DATN/client/src/components/modals/excercise-vocabulary-modal/create-exercise-vocabulary-modal.tsx",
                                                        lineNumber: 111,
                                                        columnNumber: 21
                                                    }, void 0),
                                                    /*#__PURE__*/ _jsxDEV(FormMessage, {}, void 0, false, {
                                                        fileName: "D:/DATN/client/src/components/modals/excercise-vocabulary-modal/create-exercise-vocabulary-modal.tsx",
                                                        lineNumber: 133,
                                                        columnNumber: 21
                                                    }, void 0)
                                                ]
                                            }, void 0, true, {
                                                fileName: "D:/DATN/client/src/components/modals/excercise-vocabulary-modal/create-exercise-vocabulary-modal.tsx",
                                                lineNumber: 107,
                                                columnNumber: 19
                                            }, void 0)
                                    }, void 0, false, {
                                        fileName: "D:/DATN/client/src/components/modals/excercise-vocabulary-modal/create-exercise-vocabulary-modal.tsx",
                                        lineNumber: 103,
                                        columnNumber: 15
                                    }, this),
                                    /*#__PURE__*/ _jsxDEV(FormField, {
                                        control: form.control,
                                        name: "vocabularyId",
                                        render: ({ field })=>/*#__PURE__*/ _jsxDEV(FormItem, {
                                                children: [
                                                    /*#__PURE__*/ _jsxDEV(FormLabel, {
                                                        className: "uppercase text-xs font-bold text-zinc-500 dark:text-secondary/70",
                                                        children: "User Id"
                                                    }, void 0, false, {
                                                        fileName: "D:/DATN/client/src/components/modals/excercise-vocabulary-modal/create-exercise-vocabulary-modal.tsx",
                                                        lineNumber: 142,
                                                        columnNumber: 21
                                                    }, void 0),
                                                    /*#__PURE__*/ _jsxDEV(Select, {
                                                        disabled: isLoading,
                                                        onValueChange: field.onChange,
                                                        defaultValue: field.value,
                                                        children: [
                                                            /*#__PURE__*/ _jsxDEV(FormControl, {
                                                                children: /*#__PURE__*/ _jsxDEV(SelectTrigger, {
                                                                    className: "bg-zinc-300/50 border-0 focus:ring-0 text-black ring-offset-0 focus:ring-offset-0 capitalize outline-none",
                                                                    children: /*#__PURE__*/ _jsxDEV(SelectValue, {
                                                                        placeholder: "Select a user id"
                                                                    }, void 0, false, {
                                                                        fileName: "D:/DATN/client/src/components/modals/excercise-vocabulary-modal/create-exercise-vocabulary-modal.tsx",
                                                                        lineNumber: 152,
                                                                        columnNumber: 27
                                                                    }, void 0)
                                                                }, void 0, false, {
                                                                    fileName: "D:/DATN/client/src/components/modals/excercise-vocabulary-modal/create-exercise-vocabulary-modal.tsx",
                                                                    lineNumber: 151,
                                                                    columnNumber: 25
                                                                }, void 0)
                                                            }, void 0, false, {
                                                                fileName: "D:/DATN/client/src/components/modals/excercise-vocabulary-modal/create-exercise-vocabulary-modal.tsx",
                                                                lineNumber: 150,
                                                                columnNumber: 23
                                                            }, void 0),
                                                            /*#__PURE__*/ _jsxDEV(SelectContent, {
                                                                className: "bg-white shadow-lg border border-gray-300",
                                                                children: Object?.values(vocabularyData)?.map((type)=>/*#__PURE__*/ _jsxDEV(SelectItem, {
                                                                        value: type?._id,
                                                                        className: "capitalize cursor-pointer",
                                                                        children: type?.word?.toLocaleLowerCase()
                                                                    }, type?._id, false, {
                                                                        fileName: "D:/DATN/client/src/components/modals/excercise-vocabulary-modal/create-exercise-vocabulary-modal.tsx",
                                                                        lineNumber: 157,
                                                                        columnNumber: 27
                                                                    }, void 0))
                                                            }, void 0, false, {
                                                                fileName: "D:/DATN/client/src/components/modals/excercise-vocabulary-modal/create-exercise-vocabulary-modal.tsx",
                                                                lineNumber: 155,
                                                                columnNumber: 23
                                                            }, void 0)
                                                        ]
                                                    }, void 0, true, {
                                                        fileName: "D:/DATN/client/src/components/modals/excercise-vocabulary-modal/create-exercise-vocabulary-modal.tsx",
                                                        lineNumber: 145,
                                                        columnNumber: 21
                                                    }, void 0),
                                                    /*#__PURE__*/ _jsxDEV(FormMessage, {}, void 0, false, {
                                                        fileName: "D:/DATN/client/src/components/modals/excercise-vocabulary-modal/create-exercise-vocabulary-modal.tsx",
                                                        lineNumber: 167,
                                                        columnNumber: 21
                                                    }, void 0)
                                                ]
                                            }, void 0, true, {
                                                fileName: "D:/DATN/client/src/components/modals/excercise-vocabulary-modal/create-exercise-vocabulary-modal.tsx",
                                                lineNumber: 141,
                                                columnNumber: 19
                                            }, void 0)
                                    }, void 0, false, {
                                        fileName: "D:/DATN/client/src/components/modals/excercise-vocabulary-modal/create-exercise-vocabulary-modal.tsx",
                                        lineNumber: 137,
                                        columnNumber: 15
                                    }, this)
                                ]
                            }, void 0, true, {
                                fileName: "D:/DATN/client/src/components/modals/excercise-vocabulary-modal/create-exercise-vocabulary-modal.tsx",
                                lineNumber: 102,
                                columnNumber: 13
                            }, this),
                            /*#__PURE__*/ _jsxDEV(DialogFooter, {
                                className: "bg-gray-100 px-6 py-4",
                                children: [
                                    /*#__PURE__*/ _jsxDEV(Button, {
                                        onClick: ()=>onClose(),
                                        className: "text-black rounded-[4px]",
                                        children: "No, cancel"
                                    }, void 0, false, {
                                        fileName: "D:/DATN/client/src/components/modals/excercise-vocabulary-modal/create-exercise-vocabulary-modal.tsx",
                                        lineNumber: 173,
                                        columnNumber: 15
                                    }, this),
                                    /*#__PURE__*/ _jsxDEV(Button, {
                                        disabled: isLoading,
                                        variant: "ghost",
                                        children: "Create"
                                    }, void 0, false, {
                                        fileName: "D:/DATN/client/src/components/modals/excercise-vocabulary-modal/create-exercise-vocabulary-modal.tsx",
                                        lineNumber: 179,
                                        columnNumber: 15
                                    }, this)
                                ]
                            }, void 0, true, {
                                fileName: "D:/DATN/client/src/components/modals/excercise-vocabulary-modal/create-exercise-vocabulary-modal.tsx",
                                lineNumber: 172,
                                columnNumber: 13
                            }, this)
                        ]
                    }, void 0, true, {
                        fileName: "D:/DATN/client/src/components/modals/excercise-vocabulary-modal/create-exercise-vocabulary-modal.tsx",
                        lineNumber: 101,
                        columnNumber: 11
                    }, this)
                }, void 0, false, {
                    fileName: "D:/DATN/client/src/components/modals/excercise-vocabulary-modal/create-exercise-vocabulary-modal.tsx",
                    lineNumber: 100,
                    columnNumber: 9
                }, this)
            ]
        }, void 0, true, {
            fileName: "D:/DATN/client/src/components/modals/excercise-vocabulary-modal/create-exercise-vocabulary-modal.tsx",
            lineNumber: 94,
            columnNumber: 7
        }, this)
    }, void 0, false, {
        fileName: "D:/DATN/client/src/components/modals/excercise-vocabulary-modal/create-exercise-vocabulary-modal.tsx",
        lineNumber: 93,
        columnNumber: 5
    }, this);
};
_s(CreateExerciseVocabularyModal, "vVLCPzv2XQuzfysWaTk17lnvTo4=", false, function() {
    return [
        useModal,
        useForm
    ];
});
_c = CreateExerciseVocabularyModal;
var _c;
$RefreshReg$(_c, "CreateExerciseVocabularyModal");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;

RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/DATN/client/src/components/modals/excercise-vocabulary-modal/create-exercise-vocabulary-modal.tsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/DATN/client/src/components/modals/excercise-vocabulary-modal/create-exercise-vocabulary-modal.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,