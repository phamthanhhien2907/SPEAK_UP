import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/components/modals/progress-tracking-modal/delete-progress-tracking-modal.tsx");if (!window.$RefreshReg$) throw new Error("React refresh preamble was not loaded. Something is wrong.");
const prevRefreshReg = window.$RefreshReg$;
const prevRefreshSig = window.$RefreshSig$;
window.$RefreshReg$ = RefreshRuntime.getRefreshReg("D:/DATN/client/src/components/modals/progress-tracking-modal/delete-progress-tracking-modal.tsx");
window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;

import * as RefreshRuntime from "/@react-refresh";

import __vite__cjsImport1_react_jsxDevRuntime from "/node_modules/.vite/deps/react_jsx-dev-runtime.js?v=66a6335f"; const _jsxDEV = __vite__cjsImport1_react_jsxDevRuntime["jsxDEV"];
var _s = $RefreshSig$();
"use client";
import { Dialog, DialogContent, DialogFooter, DialogHeader, DialogTitle } from "/src/components/ui/dialog.tsx";
import { Button } from "/src/components/ui/button.tsx";
import { useModal } from "/src/hooks/use-model-store.ts";
import { CircleAlert } from "/node_modules/.vite/deps/lucide-react.js?v=e8ebe34d";
import __vite__cjsImport6_react from "/node_modules/.vite/deps/react.js?v=f560a6f9"; const useState = __vite__cjsImport6_react["useState"];
import { apiDeleteProgressTrackingById } from "/src/services/progress-tracking.services.ts";
export const DeleteProgressTrackingModal = ()=>{
    _s();
    const { isOpen, onClose, type, data } = useModal();
    const { progressTracking } = data;
    const isModalOpen = isOpen && type === "deleteProgressTracking";
    const [isLoading, setIsLoading] = useState(false);
    const onSubmit = async ()=>{
        console.log(progressTracking?._id);
        if (!progressTracking?._id) return;
        setIsLoading(true);
        try {
            const res = await apiDeleteProgressTrackingById(progressTracking._id);
            if (res) onClose();
        } catch (err) {
            console.error("Failed to delete course:", err);
        } finally{
            setIsLoading(false);
        }
    };
    const handleClose = ()=>{
        onClose();
    };
    return /*#__PURE__*/ _jsxDEV(Dialog, {
        open: isModalOpen,
        onOpenChange: handleClose,
        children: /*#__PURE__*/ _jsxDEV(DialogContent, {
            className: "bg-white text-black p-0 overflow-hidden",
            children: [
                /*#__PURE__*/ _jsxDEV(DialogHeader, {
                    className: "pt-8 px-6",
                    children: /*#__PURE__*/ _jsxDEV(DialogTitle, {
                        className: "text-2xl text-center font-bold",
                        children: "Delete Progress Tracking"
                    }, void 0, false, {
                        fileName: "D:/DATN/client/src/components/modals/progress-tracking-modal/delete-progress-tracking-modal.tsx",
                        lineNumber: 43,
                        columnNumber: 11
                    }, this)
                }, void 0, false, {
                    fileName: "D:/DATN/client/src/components/modals/progress-tracking-modal/delete-progress-tracking-modal.tsx",
                    lineNumber: 42,
                    columnNumber: 9
                }, this),
                /*#__PURE__*/ _jsxDEV("div", {
                    className: "px-6 flex items-center justify-center gap-2 mb-4",
                    children: [
                        /*#__PURE__*/ _jsxDEV(CircleAlert, {
                            color: "red",
                            size: 25
                        }, void 0, false, {
                            fileName: "D:/DATN/client/src/components/modals/progress-tracking-modal/delete-progress-tracking-modal.tsx",
                            lineNumber: 49,
                            columnNumber: 11
                        }, this),
                        /*#__PURE__*/ _jsxDEV("span", {
                            className: "font-medium",
                            children: "Are you sure you want to delete this course?"
                        }, void 0, false, {
                            fileName: "D:/DATN/client/src/components/modals/progress-tracking-modal/delete-progress-tracking-modal.tsx",
                            lineNumber: 50,
                            columnNumber: 11
                        }, this)
                    ]
                }, void 0, true, {
                    fileName: "D:/DATN/client/src/components/modals/progress-tracking-modal/delete-progress-tracking-modal.tsx",
                    lineNumber: 48,
                    columnNumber: 9
                }, this),
                /*#__PURE__*/ _jsxDEV(DialogFooter, {
                    className: "bg-gray-100 px-6 py-4",
                    children: [
                        /*#__PURE__*/ _jsxDEV(Button, {
                            onClick: handleClose,
                            className: "text-black rounded-[4px]",
                            disabled: isLoading,
                            children: "No, cancel"
                        }, void 0, false, {
                            fileName: "D:/DATN/client/src/components/modals/progress-tracking-modal/delete-progress-tracking-modal.tsx",
                            lineNumber: 56,
                            columnNumber: 11
                        }, this),
                        /*#__PURE__*/ _jsxDEV(Button, {
                            onClick: onSubmit,
                            disabled: isLoading,
                            className: "bg-red-500 hover:bg-red-700 text-white rounded-[4px]",
                            children: "Yes, I'm sure"
                        }, void 0, false, {
                            fileName: "D:/DATN/client/src/components/modals/progress-tracking-modal/delete-progress-tracking-modal.tsx",
                            lineNumber: 63,
                            columnNumber: 11
                        }, this)
                    ]
                }, void 0, true, {
                    fileName: "D:/DATN/client/src/components/modals/progress-tracking-modal/delete-progress-tracking-modal.tsx",
                    lineNumber: 55,
                    columnNumber: 9
                }, this)
            ]
        }, void 0, true, {
            fileName: "D:/DATN/client/src/components/modals/progress-tracking-modal/delete-progress-tracking-modal.tsx",
            lineNumber: 41,
            columnNumber: 7
        }, this)
    }, void 0, false, {
        fileName: "D:/DATN/client/src/components/modals/progress-tracking-modal/delete-progress-tracking-modal.tsx",
        lineNumber: 40,
        columnNumber: 5
    }, this);
};
_s(DeleteProgressTrackingModal, "ITqfyC8u45LDY6Q9rmJzgklV/js=", false, function() {
    return [
        useModal
    ];
});
_c = DeleteProgressTrackingModal;
var _c;
$RefreshReg$(_c, "DeleteProgressTrackingModal");


window.$RefreshReg$ = prevRefreshReg;
window.$RefreshSig$ = prevRefreshSig;

RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {
  RefreshRuntime.registerExportsForReactRefresh("D:/DATN/client/src/components/modals/progress-tracking-modal/delete-progress-tracking-modal.tsx", currentExports);
  import.meta.hot.accept((nextExports) => {
    if (!nextExports) return;
    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate("D:/DATN/client/src/components/modals/progress-tracking-modal/delete-progress-tracking-modal.tsx", currentExports, nextExports);
    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
  });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlbGV0ZS1wcm9ncmVzcy10cmFja2luZy1tb2RhbC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XHJcbmltcG9ydCB7XHJcbiAgRGlhbG9nLFxyXG4gIERpYWxvZ0NvbnRlbnQsXHJcbiAgRGlhbG9nRm9vdGVyLFxyXG4gIERpYWxvZ0hlYWRlcixcclxuICBEaWFsb2dUaXRsZSxcclxufSBmcm9tIFwiQC9jb21wb25lbnRzL3VpL2RpYWxvZ1wiO1xyXG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tIFwiQC9jb21wb25lbnRzL3VpL2J1dHRvblwiO1xyXG5pbXBvcnQgeyB1c2VNb2RhbCB9IGZyb20gXCJAL2hvb2tzL3VzZS1tb2RlbC1zdG9yZVwiO1xyXG5pbXBvcnQgeyBDaXJjbGVBbGVydCB9IGZyb20gXCJsdWNpZGUtcmVhY3RcIjtcclxuaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgYXBpRGVsZXRlUHJvZ3Jlc3NUcmFja2luZ0J5SWQgfSBmcm9tIFwiQC9zZXJ2aWNlcy9wcm9ncmVzcy10cmFja2luZy5zZXJ2aWNlc1wiO1xyXG5cclxuZXhwb3J0IGNvbnN0IERlbGV0ZVByb2dyZXNzVHJhY2tpbmdNb2RhbCA9ICgpID0+IHtcclxuICBjb25zdCB7IGlzT3Blbiwgb25DbG9zZSwgdHlwZSwgZGF0YSB9ID0gdXNlTW9kYWwoKTtcclxuICBjb25zdCB7IHByb2dyZXNzVHJhY2tpbmcgfSA9IGRhdGE7XHJcbiAgY29uc3QgaXNNb2RhbE9wZW4gPSBpc09wZW4gJiYgdHlwZSA9PT0gXCJkZWxldGVQcm9ncmVzc1RyYWNraW5nXCI7XHJcbiAgY29uc3QgW2lzTG9hZGluZywgc2V0SXNMb2FkaW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuXHJcbiAgY29uc3Qgb25TdWJtaXQgPSBhc3luYyAoKSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZyhwcm9ncmVzc1RyYWNraW5nPy5faWQpO1xyXG4gICAgaWYgKCFwcm9ncmVzc1RyYWNraW5nPy5faWQpIHJldHVybjtcclxuICAgIHNldElzTG9hZGluZyh0cnVlKTtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGFwaURlbGV0ZVByb2dyZXNzVHJhY2tpbmdCeUlkKHByb2dyZXNzVHJhY2tpbmcuX2lkKTtcclxuICAgICAgaWYgKHJlcykgb25DbG9zZSgpO1xyXG4gICAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJGYWlsZWQgdG8gZGVsZXRlIGNvdXJzZTpcIiwgZXJyKTtcclxuICAgIH0gZmluYWxseSB7XHJcbiAgICAgIHNldElzTG9hZGluZyhmYWxzZSk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgaGFuZGxlQ2xvc2UgPSAoKSA9PiB7XHJcbiAgICBvbkNsb3NlKCk7XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxEaWFsb2cgb3Blbj17aXNNb2RhbE9wZW59IG9uT3BlbkNoYW5nZT17aGFuZGxlQ2xvc2V9PlxyXG4gICAgICA8RGlhbG9nQ29udGVudCBjbGFzc05hbWU9XCJiZy13aGl0ZSB0ZXh0LWJsYWNrIHAtMCBvdmVyZmxvdy1oaWRkZW5cIj5cclxuICAgICAgICA8RGlhbG9nSGVhZGVyIGNsYXNzTmFtZT1cInB0LTggcHgtNlwiPlxyXG4gICAgICAgICAgPERpYWxvZ1RpdGxlIGNsYXNzTmFtZT1cInRleHQtMnhsIHRleHQtY2VudGVyIGZvbnQtYm9sZFwiPlxyXG4gICAgICAgICAgICBEZWxldGUgUHJvZ3Jlc3MgVHJhY2tpbmdcclxuICAgICAgICAgIDwvRGlhbG9nVGl0bGU+XHJcbiAgICAgICAgPC9EaWFsb2dIZWFkZXI+XHJcblxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicHgtNiBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBnYXAtMiBtYi00XCI+XHJcbiAgICAgICAgICA8Q2lyY2xlQWxlcnQgY29sb3I9XCJyZWRcIiBzaXplPXsyNX0gLz5cclxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImZvbnQtbWVkaXVtXCI+XHJcbiAgICAgICAgICAgIEFyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBkZWxldGUgdGhpcyBjb3Vyc2U/XHJcbiAgICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgIDxEaWFsb2dGb290ZXIgY2xhc3NOYW1lPVwiYmctZ3JheS0xMDAgcHgtNiBweS00XCI+XHJcbiAgICAgICAgICA8QnV0dG9uXHJcbiAgICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZUNsb3NlfVxyXG4gICAgICAgICAgICBjbGFzc05hbWU9XCJ0ZXh0LWJsYWNrIHJvdW5kZWQtWzRweF1cIlxyXG4gICAgICAgICAgICBkaXNhYmxlZD17aXNMb2FkaW5nfVxyXG4gICAgICAgICAgPlxyXG4gICAgICAgICAgICBObywgY2FuY2VsXHJcbiAgICAgICAgICA8L0J1dHRvbj5cclxuICAgICAgICAgIDxCdXR0b25cclxuICAgICAgICAgICAgb25DbGljaz17b25TdWJtaXR9XHJcbiAgICAgICAgICAgIGRpc2FibGVkPXtpc0xvYWRpbmd9XHJcbiAgICAgICAgICAgIGNsYXNzTmFtZT1cImJnLXJlZC01MDAgaG92ZXI6YmctcmVkLTcwMCB0ZXh0LXdoaXRlIHJvdW5kZWQtWzRweF1cIlxyXG4gICAgICAgICAgPlxyXG4gICAgICAgICAgICBZZXMsIEknbSBzdXJlXHJcbiAgICAgICAgICA8L0J1dHRvbj5cclxuICAgICAgICA8L0RpYWxvZ0Zvb3Rlcj5cclxuICAgICAgPC9EaWFsb2dDb250ZW50PlxyXG4gICAgPC9EaWFsb2c+XHJcbiAgKTtcclxufTtcclxuIl0sIm5hbWVzIjpbIkRpYWxvZyIsIkRpYWxvZ0NvbnRlbnQiLCJEaWFsb2dGb290ZXIiLCJEaWFsb2dIZWFkZXIiLCJEaWFsb2dUaXRsZSIsIkJ1dHRvbiIsInVzZU1vZGFsIiwiQ2lyY2xlQWxlcnQiLCJ1c2VTdGF0ZSIsImFwaURlbGV0ZVByb2dyZXNzVHJhY2tpbmdCeUlkIiwiRGVsZXRlUHJvZ3Jlc3NUcmFja2luZ01vZGFsIiwiaXNPcGVuIiwib25DbG9zZSIsInR5cGUiLCJkYXRhIiwicHJvZ3Jlc3NUcmFja2luZyIsImlzTW9kYWxPcGVuIiwiaXNMb2FkaW5nIiwic2V0SXNMb2FkaW5nIiwib25TdWJtaXQiLCJjb25zb2xlIiwibG9nIiwiX2lkIiwicmVzIiwiZXJyIiwiZXJyb3IiLCJoYW5kbGVDbG9zZSIsIm9wZW4iLCJvbk9wZW5DaGFuZ2UiLCJjbGFzc05hbWUiLCJkaXYiLCJjb2xvciIsInNpemUiLCJzcGFuIiwib25DbGljayIsImRpc2FibGVkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQSxTQUNFQSxNQUFNLEVBQ05DLGFBQWEsRUFDYkMsWUFBWSxFQUNaQyxZQUFZLEVBQ1pDLFdBQVcsUUFDTix5QkFBeUI7QUFDaEMsU0FBU0MsTUFBTSxRQUFRLHlCQUF5QjtBQUNoRCxTQUFTQyxRQUFRLFFBQVEsMEJBQTBCO0FBQ25ELFNBQVNDLFdBQVcsUUFBUSxlQUFlO0FBQzNDLFNBQVNDLFFBQVEsUUFBUSxRQUFRO0FBQ2pDLFNBQVNDLDZCQUE2QixRQUFRLHdDQUF3QztBQUV0RixPQUFPLE1BQU1DLDhCQUE4Qjs7SUFDekMsTUFBTSxFQUFFQyxNQUFNLEVBQUVDLE9BQU8sRUFBRUMsSUFBSSxFQUFFQyxJQUFJLEVBQUUsR0FBR1I7SUFDeEMsTUFBTSxFQUFFUyxnQkFBZ0IsRUFBRSxHQUFHRDtJQUM3QixNQUFNRSxjQUFjTCxVQUFVRSxTQUFTO0lBQ3ZDLE1BQU0sQ0FBQ0ksV0FBV0MsYUFBYSxHQUFHVixTQUFTO0lBRTNDLE1BQU1XLFdBQVc7UUFDZkMsUUFBUUMsR0FBRyxDQUFDTixrQkFBa0JPO1FBQzlCLElBQUksQ0FBQ1Asa0JBQWtCTyxLQUFLO1FBQzVCSixhQUFhO1FBQ2IsSUFBSTtZQUNGLE1BQU1LLE1BQU0sTUFBTWQsOEJBQThCTSxpQkFBaUJPLEdBQUc7WUFDcEUsSUFBSUMsS0FBS1g7UUFDWCxFQUFFLE9BQU9ZLEtBQUs7WUFDWkosUUFBUUssS0FBSyxDQUFDLDRCQUE0QkQ7UUFDNUMsU0FBVTtZQUNSTixhQUFhO1FBQ2Y7SUFDRjtJQUVBLE1BQU1RLGNBQWM7UUFDbEJkO0lBQ0Y7SUFFQSxxQkFDRSxRQUFDWjtRQUFPMkIsTUFBTVg7UUFBYVksY0FBY0Y7a0JBQ3ZDLGNBQUEsUUFBQ3pCO1lBQWM0QixXQUFVOzs4QkFDdkIsUUFBQzFCO29CQUFhMEIsV0FBVTs4QkFDdEIsY0FBQSxRQUFDekI7d0JBQVl5QixXQUFVO2tDQUFpQzs7Ozs7Ozs7Ozs7OEJBSzFELFFBQUNDO29CQUFJRCxXQUFVOztzQ0FDYixRQUFDdEI7NEJBQVl3QixPQUFNOzRCQUFNQyxNQUFNOzs7Ozs7c0NBQy9CLFFBQUNDOzRCQUFLSixXQUFVO3NDQUFjOzs7Ozs7Ozs7Ozs7OEJBS2hDLFFBQUMzQjtvQkFBYTJCLFdBQVU7O3NDQUN0QixRQUFDeEI7NEJBQ0M2QixTQUFTUjs0QkFDVEcsV0FBVTs0QkFDVk0sVUFBVWxCO3NDQUNYOzs7Ozs7c0NBR0QsUUFBQ1o7NEJBQ0M2QixTQUFTZjs0QkFDVGdCLFVBQVVsQjs0QkFDVlksV0FBVTtzQ0FDWDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFPWCxFQUFFO0dBM0RXbkI7O1FBQzZCSjs7O0tBRDdCSSJ9